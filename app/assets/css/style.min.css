/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}body,html{width:100%;height:100%}body{font-family:Open Sans,Arial,sans-serif}.container,.line-container{max-width:1170px;width:100%;margin:0 auto}.line-container{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.yellow{color:#fde873}.salad-bold{color:#00cad1}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.header{margin:0;padding:0}.header .container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap;padding-top:25px;padding-bottom:30px}.header__text{max-width:275px}.header__text p{font-size:16px;color:#201e34}.contacts{text-align:right}.telephone{font-family:Amazing Grotesk Ultra;text-decoration:none;color:#201e34;font-size:30px;line-height:30px;margin-bottom:6px}.messengers{margin-bottom:10px}.messengers a{text-decoration:none;font-size:12px;position:relative;color:#201e34;margin-left:41px}.messengers a:before{content:"";position:absolute;width:16px;height:16px;left:-21px;top:0;background-repeat:no-repeat;background-position:50%}.messengers__item--viber:before{background-image:url(/assets/img/icons/viber-logo.png)}.messengers__item--wa:before{background-image:url(/assets/img/icons/whatsapp-logo.png)}.messengers__item--tlg:before{background-image:url(/assets/img/icons/telegram-logo.png)}.call-me{max-width:171px;border-radius:18px;background-color:inherit;border:2px solid #00cad1;padding:5px 10px;font-family:Amazing Grotesk Demi;color:#00cad1}.carousel{width:863px;height:300px;border-radius:6px;margin-right:15px}.carousel__slide-1{padding:40px;background-image:url(/assets/img/carousel-bg-1.jpg);background-position:50%;background-color:#201e34;width:100%;height:100%}.carousel__slide-1 h1{margin:0;font-family:Amazing Grotesk Ultra;color:#fde873;text-transform:uppercase;padding-right:320px}.carousel__slide-1 p{font-family:Open Sans Semibold;color:#fff;padding-right:310px;text-align:left;font-size:18px;line-height:24px}.carousel__slide-1 b{font-family:Amazing Grotesk Ultra}.download{width:291px;height:300px;background-color:#201e34;background-image:url(/assets/img/file.png);background-repeat:no-repeat;background-position:50% 140%;text-align:center;position:relative;border-radius:6px;padding-top:30px}.download__header{color:#fff;font-family:Amazing Grotesk Ultra;font-size:21px;margin:0;margin-bottom:100px}.download__link{text-decoration:none;color:#201e34;background-color:#fde873;padding:13px 50px 13px 70px;border-radius:23px;font-family:Amazing Grotesk Demi;max-width:220px;position:relative;font-size:18px}.download__link:before{content:"";width:20px;height:16px;position:absolute;left:25%;top:48%;bottom:0;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);background-image:url(/assets/img/icons/download.png)}.download__link:hover{opacity:.9}.eggs ul{list-style:none;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:0;margin:0;padding-top:60px;padding-bottom:55px}.eggs__item,.eggs ul{display:-webkit-box;display:-ms-flexbox;display:flex}.eggs__item{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;position:relative;text-align:center;min-width:25%}.eggs__item:after{content:"";width:3px;height:61px;position:absolute;right:0;top:0;background-image:url(/assets/img/dotted\ line.png);background-repeat:no-repeat}.eggs__item:last-child::after{content:none}.eggs__item b{font-family:Amazing Grotesk Ultra;color:#00cad1;font-size:36px}.eggs__item span{color:#201e34;font-family:Open Sans Semibold;font-size:16px;line-height:27px}.about{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.about iframe{margin-right:15px}.about__comment{width:570px;padding-left:22px}.about__comment p{color:#201e34;line-height:30px;font-size:16px;margin:0}.about__comment p:nth-child(2){margin-bottom:30px}.about__avatar{margin-right:25px}.about__header{display:-webkit-box;display:-ms-flexbox;display:flex;margin-bottom:43px}.about__header h3{font-family:Amazing Grotesk Ultra;color:#201e34;font-size:18px;line-height:24px;padding-right:28px}.form-call{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.form-call__input{width:284px;background-color:#f2f2f2;color:#7f7f7f;font-size:14px;font-family:Open Sans;border-radius:22px;padding:.6em 35px;border:none}.form-call__input--btn{background-color:#00cad1;color:#fff;font-family:Amazing Grotesk Demi;font-size:18px;cursor:pointer}.footer{background-color:#201e34}.footer .messengers__item,.footer .telephone{color:#fff}.footer .messengers__item--viber:before{background-image:url(/assets/img/icons/viber-logo-yellow.png);width:19px;height:19px}.footer .messengers__item--wa:before{background-image:url(/assets/img/icons/whatsapp-logo-yellow.png);width:19px;height:19px}.footer .messengers__item--tlg:before{background-image:url(/assets/img/icons/telegram-logo-yellow.png);width:19px;height:19px}.footer__top{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding-top:35px}.footer__top:before{content:"";height:2px;background-color:#fde873;width:100%;position:absolute;bottom:0}.footer__info h4{margin:0;font-family:Open Sans Semibold}.footer__info h4,.footer__info p{font-size:14px;line-height:22px;color:#fff}@font-face{font-family:Open Sans;src:url(/fonts/Open\ Sans/OpenSans-Regular.ttf);font-weight:400;font-style:normal}@font-face{font-family:Open Sans Semibold;src:url(/fonts/Open\ Sans/OpenSans-SemiBold.ttf);font-weight:700;font-style:normal}@font-face{font-family:Amazing Grotesk Ultra;src:url("/fonts/Amazing Grotesk/Amazing Grotesk Ultra.otf");font-weight:700;font-style:normal}@font-face{font-family:Amazing Grotesk Demi;src:url("/fonts/Amazing Grotesk/Amazing Grotesk Demi.otf");font-weight:400;font-style:normal}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
